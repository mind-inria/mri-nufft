
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "generated/autoexamples/operators/example_offresonance.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_generated_autoexamples_operators_example_offresonance.py>`
        to download the full example code. or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_generated_autoexamples_operators_example_offresonance.py:


======================================
Off-resonance corrected NUFFT operator
======================================

An example to show how to setup an off-resonance corrected NUFFT operator.

This example shows how to use the off-resonance corrected (ORC) NUFFT operator
to reconstruct data in presence of B0 field inhomogeneities.
Hereafter a 2D spiral trajectory is used for demonstration.

.. GENERATED FROM PYTHON SOURCE LINES 13-22

.. code-block:: Python


    import matplotlib.pyplot as plt
    import numpy as np

    from mrinufft import display_2D_trajectory

    plt.rcParams["image.cmap"] = "gray"









.. GENERATED FROM PYTHON SOURCE LINES 23-31

Data preparation
================

Image loading
-------------

For realistic a 2D image we will use the BrainWeb dataset,
installable using ``pip install brainweb-dl``.

.. GENERATED FROM PYTHON SOURCE LINES 31-37

.. code-block:: Python


    from brainweb_dl import get_mri

    mri_data = get_mri(0, "T1")
    mri_data = np.flip(mri_data, axis=(0, 1, 2))[90]








.. GENERATED FROM PYTHON SOURCE LINES 38-45

.. code-block:: Python


    plt.imshow(mri_data)
    plt.axis("off")
    plt.title("Groundtruth")
    plt.show()





.. image-sg:: /generated/autoexamples/operators/images/sphx_glr_example_offresonance_001.png
   :alt: Groundtruth
   :srcset: /generated/autoexamples/operators/images/sphx_glr_example_offresonance_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 46-52

Mask generation
---------------

A binary mask is generated to exclude the background.
We use a simple binary threshold for this example, but for real-world application
it is advised to use more advanced methods and tools (e.g., FSL-BET).

.. GENERATED FROM PYTHON SOURCE LINES 52-55

.. code-block:: Python


    brain_mask = mri_data > 0.1 * mri_data.max()








.. GENERATED FROM PYTHON SOURCE LINES 56-63

.. code-block:: Python


    plt.imshow(brain_mask)
    plt.axis("off")
    plt.title("brain mask")
    plt.show()





.. image-sg:: /generated/autoexamples/operators/images/sphx_glr_example_offresonance_002.png
   :alt: brain mask
   :srcset: /generated/autoexamples/operators/images/sphx_glr_example_offresonance_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 64-68

B0 field map generation
-----------------------

A dummy B0 field map is generated for this example using the input shape.

.. GENERATED FROM PYTHON SOURCE LINES 68-73

.. code-block:: Python


    from mrinufft.extras import make_b0map

    b0map, _ = make_b0map(mri_data.shape, b0range=(-200, 200), mask=brain_mask)








.. GENERATED FROM PYTHON SOURCE LINES 74-82

.. code-block:: Python


    plt.imshow(brain_mask * b0map, cmap="bwr", vmin=-200, vmax=200)
    plt.axis("off")
    plt.colorbar()
    plt.title("B0 map [Hz]")
    plt.show()





.. image-sg:: /generated/autoexamples/operators/images/sphx_glr_example_offresonance_003.png
   :alt: B0 map [Hz]
   :srcset: /generated/autoexamples/operators/images/sphx_glr_example_offresonance_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 83-85

Trajectory generation
---------------------

.. GENERATED FROM PYTHON SOURCE LINES 85-95

.. code-block:: Python


    from mrinufft import initialize_2D_spiral
    from mrinufft.density import voronoi
    from mrinufft.trajectories.utils import Acquisition

    samples = initialize_2D_spiral(Nc=48, Ns=600, nb_revolutions=10)
    t_read = np.arange(samples.shape[1]) * Acquisition.default.raster_time
    t_read = np.repeat(t_read[None, ...], samples.shape[0], axis=0)
    density = voronoi(samples)








.. GENERATED FROM PYTHON SOURCE LINES 96-100

.. code-block:: Python


    display_2D_trajectory(samples)
    plt.show()




.. image-sg:: /generated/autoexamples/operators/images/sphx_glr_example_offresonance_004.png
   :alt: example offresonance
   :srcset: /generated/autoexamples/operators/images/sphx_glr_example_offresonance_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 101-103

Operator setup
==============

.. GENERATED FROM PYTHON SOURCE LINES 103-135

.. code-block:: Python


    from mrinufft import get_operator
    from mrinufft.operators.off_resonance import MRIFourierCorrected

    # Generate standard NUFFT operator
    nufft = get_operator("finufft")(
        samples=2 * np.pi * samples,  # normalize for finufft
        shape=mri_data.shape,
        density=density,
    )

    # Generate NUFFT off-resonance corrected operator
    orc_nufft = MRIFourierCorrected(
        nufft, b0_map=b0map, readout_time=t_read, mask=brain_mask
    )

    # Generate k-space
    kspace_on = nufft.op(mri_data)
    kspace_off = orc_nufft.op(mri_data)

    # Reconstruct without B0 field inhomogeneity
    mri_data_adj_ref = nufft.adj_op(kspace_on)
    mri_data_adj_ref = np.squeeze(abs(mri_data_adj_ref))

    # Reconstruct without B0 field correction
    mri_data_adj = nufft.adj_op(kspace_off)
    mri_data_adj = np.squeeze(abs(mri_data_adj))

    # Reconstruct with B0 field correction
    mri_data_adj_orc = orc_nufft.adj_op(kspace_off)
    mri_data_adj_orc = np.squeeze(abs(mri_data_adj_orc))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /volatile/github-ci-mind-inria/gpu_mind_runner/_work/mri-nufft/venv/lib/python3.10/site-packages/finufft/_interfaces.py:336: UserWarning: Argument `data` does not satisfy the following requirement: C. Copying array (this may reduce performance)
      warnings.warn(f"Argument `{name}` does not satisfy the following requirement: {prop}. Copying array (this may reduce performance)")
    /volatile/github-ci-mind-inria/gpu_mind_runner/_work/mri-nufft/venv/lib/python3.10/site-packages/mrinufft/_array_compat.py:110: UserWarning: The input is CPU array but not C-contiguous. 
      warnings.warn("The input is CPU array but not C-contiguous. ")




.. GENERATED FROM PYTHON SOURCE LINES 136-138

The blurring observed in the presence of B0 field inhomogeneities (middle)
is significantly reduced using the off-resonance corrected NUFFT operator (right).

.. GENERATED FROM PYTHON SOURCE LINES 138-153

.. code-block:: Python


    fig2, ax2 = plt.subplots(1, 3, figsize=(9, 3))
    # No off-resonance
    ax2[0].imshow(mri_data_adj_ref)
    ax2[0].axis("off")
    ax2[0].set_title("No off-resonance")
    # No off-resonance correction
    ax2[1].imshow(mri_data_adj)
    ax2[1].axis("off")
    ax2[1].set_title("Off-resonance")
    # Off-resonance corrected
    ax2[2].imshow(mri_data_adj_orc)
    ax2[2].axis("off")
    ax2[2].set_title("Corrected off-resonance")
    plt.show()



.. image-sg:: /generated/autoexamples/operators/images/sphx_glr_example_offresonance_005.png
   :alt: No off-resonance, Off-resonance, Corrected off-resonance
   :srcset: /generated/autoexamples/operators/images/sphx_glr_example_offresonance_005.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 6.032 seconds)


.. _sphx_glr_download_generated_autoexamples_operators_example_offresonance.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/mind-inria/mri-nufft/gh-pages?urlpath=lab/tree/examples/generated/autoexamples/operators/example_offresonance.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: example_offresonance.ipynb <example_offresonance.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: example_offresonance.py <example_offresonance.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: example_offresonance.zip <example_offresonance.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
