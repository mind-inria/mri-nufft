name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  workflow_dispatch:

jobs:
  linter-check:
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout 
        uses: actions/checkout@v3
      - name: Set up Python "3.10"
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Black setup
        shell: bash
        run: pip install black ruff
      - name: Black Check
        shell: bash
        run: black . --diff --color
      - name: ruff Check
        shell: bash
        run: ruff src
        
  test-suite:
    runs-on: ${{ matrix.os }}
    needs: linter-check
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, gpu]
        python-version: ["3.10", "3.8"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        shell: bash
        run: |
          sudo apt install -y libnfft3-dev
          python --version
          python -m pip install --upgrade pip
          python -m pip install .[test]

      - name: Install CPU Backends
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          python -m pip install finufft pynfft2

      - name: Install cufinufft
        if: matrix.os == 'gpu'
        shell: bash
        run: |
           pushd
           git clone https://github.com/chaithyagr/finufft --branch chaithyagr/issue306
           cd finufft && mkdir build && cd build
           cmake -DFINUFFT_USE_CUDA=1 ../ && make -j && cp libcufinufft.so ../python/cufinufft/.
           conda activate gadgetron && cd ../python/cufinufft
           LD_LIBRARY_PATH="../../build" LIBRARY_PATH="../../build" python -m pip install -e .
           # FIXME: This is hardcoded
           cp ../../build/libcufinufft.so  cufinufftc.cpython-39-x86_64-linux-gnu.so
           python -m pip install git+https://github.com/mind-inria/mri-nufft
           popd

      - name: Run Tests
        shell: bash
        run: | 
          pytest -n auto  --cov=mrinufft --cov-report xml:coverage.xml --cov-report term-missing:skip-covered

      - name: Upload coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage.$$matrix.os.$$matrix.python-version
          path: .coverage

  coverage:
    runs-on: ubuntu-latest
    needs: test-suite
    steps:
      - name: Download coverage CPU
        uses: actions/download-artifact@v2
        with:
          name: coverage.ubuntu-latest.3.10
          path: .coverage.ubuntu-latest.3.10
      - name: Download coverage GPU
        uses: actions/download-artifact@v2
        with:
          name: coverage.gpu.3.10
          path: .coverage.gpu.3.10

      - name: Combine coverage
        shell: bash
        run: |
          coverage combine
          coverage xml
          coverage report
